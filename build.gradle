plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id "de.undercouch.download" version "4.1.1"
}


version = '0.1.0'
sourceCompatibility = 11

mainClassName = 'de/unitrier/st/core/Main'
//mainClassName = 'de/unitrier/st/ui/Ui'

javafx {
    version = '12'
    modules = ['javafx.graphics', 'javafx.controls']
}

sourceSets {
    main {
        java {
            srcDir 'main/java'
            include '**/*.java'
        }
        resources {
            srcDir 'main/resources'
        }
    }

    test{
        java {
            srcDir 'main/java'
//            include '**/core/*.java'
        }
    }
}



task unzip(dependsOn: download, type : Copy) {
    def oldLocation = file("main/resources/covid-19_zip.zip")
    def newLocation = file("main/resources/")
    from zipTree(oldLocation)
    into newLocation
}

task downloadZipFile(type : Download) {
    src 'https://datahub.io/core/covid-19/r/covid-19_zip.zip'
    dest 'src/main/resources'
    onlyIfModified true
}

task downloadAndUnzipFile(dependsOn: downloadZipFile, type: Copy) {
    from zipTree(file("src/main/resources/covid-19_zip.zip"))
    into 'src/main/resources'
}


task downloadAndRelocateData(dependsOn: downloadAndUnzipFile, type: Copy){
    def oldLocation = file("src/main/resources/data/countries-aggregated_json.json")
    def newLocation = file("src/main/resources/")
    from oldLocation
    into newLocation
}

task buildCore(dependsOn: downloadAndRelocateData){
    doLast{
        sourceSets.main.java.exclude('**/ui')
        println 'building core'
    }
    finalizedBy(build)

}

task buildUi(dependsOn: downloadAndRelocateData){
    doLast{
        println 'building core and ui'
    }
    // sourceSets.main.java.include('**/ui')
    finalizedBy(build)
}

task runCore(dependsOn: buildCore){
    doLast {
        mainClassName = 'de/unitrier/st/core/Main'
    }
    finalizedBy(run)

}

task runUi(dependsOn: buildUi){
    doLast {
        mainClassName = 'de/unitrier/st/ui/Ui'
    }
    finalizedBy(run)
}



repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10'
    // https://mvnrepository.com/artifact/junit/junit
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'

}

